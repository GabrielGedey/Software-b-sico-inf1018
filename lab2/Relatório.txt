1a) Cada dois dígitos hexadecimais equivalem a 16*16= 256 possibilidades, que equivale a um byte que é o mesmo que 8 bits= 2*2*2*2*2*2*2*2 = 256 possibilidades por análise combinatória pois cada casa pode ser 0 ou 1. 10.000 na base 16 dá 2*16³ + 7*16²+ 1*16¹+ 0*16⁰. = 2710. Na memória ficará printado pela convenção little endian (byte menos significativo primeiro)
10
27
00
00
Pois o primeiro byte é 10, depois 27 e os outros estão vazios, por isso 00 e  00

1b)Apareceu na tela
10
27
00
00
00
00
00
00
00
O dump foi maior pois long ocupa 8 bytes
1c) O short será armazenado em 2 bytes apenas

1d) Se eu colocar char i = 97 vai aparecer na memória 61 que é 97 em hexadecimal,
lembrando que char ocupa 1 byte, ou seja 8 bits e 256 informações. Se eu colocar char i = 'a' que é o número 97 na tabela ASC22, vai dar o 97 em hexadecimal analogamente.

1e)Ao fazer o dump de "7509" obtemos na saída 37 35 30 39 00. A explicação é que o 37 na base 16 é 55 na base 10 que é o número na tabela ASCII para o caractere 7. Analogamente para o 35, 30 e 39. Já o 00 é o caractre NULL terminated string que é o caractere 0 na tabela ASCII, a string ocupa. Os caracteres 'A',' ','\n' e '$'.65, 32,10 e 36




